// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RecognitionServerResult.proto

#ifndef PROTOBUF_RecognitionServerResult_2eproto__INCLUDED
#define PROTOBUF_RecognitionServerResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace org {
namespace sas04225 {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RecognitionServerResult_2eproto();
void protobuf_AssignDesc_RecognitionServerResult_2eproto();
void protobuf_ShutdownFile_RecognitionServerResult_2eproto();

class Result;
class Tag;

// ===================================================================

class Result : public ::google::protobuf::Message {
 public:
  Result();
  virtual ~Result();
  
  Result(const Result& from);
  
  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();
  
  void Swap(Result* other);
  
  // implements Message ----------------------------------------------
  
  Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 request_id = 1;
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  inline ::google::protobuf::uint64 request_id() const;
  inline void set_request_id(::google::protobuf::uint64 value);
  
  // repeated .org.sas04225.proto.Tag tags = 2;
  inline int tags_size() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 2;
  inline const ::org::sas04225::proto::Tag& tags(int index) const;
  inline ::org::sas04225::proto::Tag* mutable_tags(int index);
  inline ::org::sas04225::proto::Tag* add_tags();
  inline const ::google::protobuf::RepeatedPtrField< ::org::sas04225::proto::Tag >&
      tags() const;
  inline ::google::protobuf::RepeatedPtrField< ::org::sas04225::proto::Tag >*
      mutable_tags();
  
  // @@protoc_insertion_point(class_scope:org.sas04225.proto.Result)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::RepeatedPtrField< ::org::sas04225::proto::Tag > tags_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_RecognitionServerResult_2eproto();
  friend void protobuf_AssignDesc_RecognitionServerResult_2eproto();
  friend void protobuf_ShutdownFile_RecognitionServerResult_2eproto();
  
  void InitAsDefaultInstance();
  static Result* default_instance_;
};
// -------------------------------------------------------------------

class Tag : public ::google::protobuf::Message {
 public:
  Tag();
  virtual ~Tag();
  
  Tag(const Tag& from);
  
  inline Tag& operator=(const Tag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tag& default_instance();
  
  void Swap(Tag* other);
  
  // implements Message ----------------------------------------------
  
  Tag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tag& from);
  void MergeFrom(const Tag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:org.sas04225.proto.Tag)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_RecognitionServerResult_2eproto();
  friend void protobuf_AssignDesc_RecognitionServerResult_2eproto();
  friend void protobuf_ShutdownFile_RecognitionServerResult_2eproto();
  
  void InitAsDefaultInstance();
  static Tag* default_instance_;
};
// ===================================================================


// ===================================================================

// Result

// required uint64 request_id = 1;
inline bool Result::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Result::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Result::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Result::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
  clear_has_request_id();
}
inline ::google::protobuf::uint64 Result::request_id() const {
  return request_id_;
}
inline void Result::set_request_id(::google::protobuf::uint64 value) {
  set_has_request_id();
  request_id_ = value;
}

// repeated .org.sas04225.proto.Tag tags = 2;
inline int Result::tags_size() const {
  return tags_.size();
}
inline void Result::clear_tags() {
  tags_.Clear();
}
inline const ::org::sas04225::proto::Tag& Result::tags(int index) const {
  return tags_.Get(index);
}
inline ::org::sas04225::proto::Tag* Result::mutable_tags(int index) {
  return tags_.Mutable(index);
}
inline ::org::sas04225::proto::Tag* Result::add_tags() {
  return tags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::org::sas04225::proto::Tag >&
Result::tags() const {
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::org::sas04225::proto::Tag >*
Result::mutable_tags() {
  return &tags_;
}

// -------------------------------------------------------------------

// Tag

// required string name = 1;
inline bool Tag::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Tag::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Tag::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Tag::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Tag::name() const {
  return *name_;
}
inline void Tag::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Tag::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Tag::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Tag::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Tag::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 count = 2;
inline bool Tag::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Tag::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Tag::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Tag::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Tag::count() const {
  return count_;
}
inline void Tag::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace sas04225
}  // namespace org

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RecognitionServerResult_2eproto__INCLUDED
