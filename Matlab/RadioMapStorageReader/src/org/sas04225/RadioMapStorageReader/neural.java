package org.sas04225.RadioMapStorageReader;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Aishu
 */
import java.io.*;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;
import java.util.Map.Entry;
import static org.sas04225.proto.WifiScanResultProto.WifiScanResult;
import static org.sas04225.proto.WifiScanResultProto.AccessPoint;

public class neural {
    static int size=71,out=0;
    static int l1_size=71;
    static int l2_size=24;
    static double [][] l1_w=new double [size][l1_size];// weights for l1
    static double[] l2_w= new double [l2_size];
    static double[] l1_bias=new double[l1_size];
    static double l2_bias=0;
     static  String outputstring="p";
    static java.util.Hashtable<String, Integer> bssids = new java.util.Hashtable<String, Integer>();
    static java.util.Hashtable<String, Integer> loc_tag = new java.util.Hashtable<String, Integer>();
    static java.util.Hashtable<Integer,String> loc_tag_revese = new Hashtable<>();
   static final String WifiReadingsFolder = "H:/wifireadingsnew/";
     
    
    @SuppressWarnings("empty-statement")
   static void neural()
    {
        
     l1_w=new double[][]{{2.0715,3.3872,0.6497,1.2511,-3.4471,-1.2762,0.1544,-1.1959,-2.1662,0.48264,0.92709,0.72834,-1.7829,-
3.08,1.707,-0.78552,1.4531,0.54155,-1.7435,2.7915,-2.1664,-1.6474,0.12499,-1.099,-1.03,-
0.10942,0.21397,2.2347,1.935,-0.72064,-2.3017,-1.0237,1.1999,-0.31825,2.1947,-1.1054,-
0.18626,1.1058,0.17714,-1.4101,-2.2883,-1.4616,1.8001,-0.5837,-1.1783,-1.9114,-3.6961,-4.7443,-1.197,-
1.6208,0.69142,0.82243,-0.28487,0.54975,-0.79392,2.0677,-0.64919,3.2087,-3.9295,1.4288,2.4397,3.1901,-
2.6541,1.4471,4.1029,-2.0257,2.1564,0.98294,-1.8227,-2.9471,1.2378,-0.031301,1.1406,1.33,0.24123,-
0.68656,-0.21873},{-1.7067,-0.71687,3.023,-3.9105,0.80132,-0.26152,1.3522,-0.94354,1.6899,-1.0444,1.3421,-
0.9672,1.9546,0.024723,-1.6126,-0.51106,-1.4184,-0.66206,-1.5648,-3.8411,-1.9605,0.031831,-1.9325,-
1.2532,0.59003,1.1873,-2.1303,0.87141,-0.21666,-1.7188,-2.2821,0.69145,-
3.6065,3.5009,0.15696,0.60289,-2.2515,0.53437,1.0758,0.811,0.18449,0.47545,0.087666,-2.6667,0.20483,-
2.9472,-0.058021,-2.1449,-3.5718,0.47861,1.4384,1.2221,-0.10927,0.13117,0.31515,1.472,-0.14513,-
3.0837,2.7573,-4.2398,3.6823,-0.77297,2.1722,-2.4122,-3.6143,2.1897,-4.4249,-0.06775,-1.5037,0.80752,-
0.90181,1.6116,-0.23481,-1.1797,-0.024132,-0.025368,0.61684},{3.8743,-2.577,-3.5738,3.4819,2.3894,-0.68427,-1.3059,-1.458,0.97691,1.9713,-
0.99675,2.7076,1.1524,1.83,-1.4658,-0.066418,-0.63981,2.3835,0.11841,-3.2932,1.8627,-0.82627,-1.0149,-
0.49058,0.65235,0.69848,1.8613,-1.7877,2.0184,-0.2909,1.4863,0.11989,-3.5507,3.125,3.1229,-2.4344,-
2.4496,-0.50461,-1.0578,0.51548,1.5609,-1.3755,0.72618,1.5434,3.3206,-2.4393,2.6935,-3.1925,1.8589,-
0.288,0.52112,-0.25891,-1.0487,0.072152,-1.0385,-1.8905,0.71592,-2.716,-1.7921,-3.13,1.7999,-
3.2437,0.47641,-3.0342,1.9959,-0.42438,-2.3525,4.3469,-2.022,-0.56308,1.5099,-0.41127,0.52655,0.1941,-
1.1102,-0.016201,0.17266},{2.536,1.4724,0.6373,-0.69207,-1.6356,-0.35434,-0.52385,-0.37646,2.0202,1.369,-0.94794,-0.85938,-
0.47817,1.7637,0.84579,-1.0394,-1.0777,3.0993,-0.70223,-0.034914,1.2511,-1.6834,-
0.45854,0.51375,1.1764,-2.3422,1.5454,-0.27968,1.7074,1.7201,0.55122,-
1.0431,1.7057,1.1847,1.7064,1.4044,-2.5521,-2.1936,2.646,-2.8222,-1.3018,1.7475,1.0205,0.3887,1.2907,-
2.7742,-0.28312,2.353,-0.35121,-0.30603,-0.98933,-1.5573,0.29015,0.57779,-1.4424,1.5205,0.89485,-
3.1209,-0.83759,5.6834,6.2082,-1.6122,1.2755,-2.4028,4.9769,-0.78222,-3.8204,-4.367,-
2.5098,0.63785,1.6125,-0.87904,1.9447,0.81562,1.4798,0.38023,0.97119},{-0.89396,-1.32,-2.9183,-1.1136,-0.25832,1.1599,1.033,-0.52304,1.6539,-0.10043,-0.081796,-2.8179,-
1.0433,1.5262,0.45553,1.5795,0.3466,0.16542,1.3687,-1.4987,1.0268,-0.0054662,-1.4465,-0.30584,1.9588,-
0.5837,-0.80139,2.0862,-1.3791,1.6594,-0.70288,-0.11238,2.7893,-2.784,-0.82233,-0.0011004,-1.623,-
1.0422,-1.4069,2.1199,-2.248,-2.0529,2.2893,1.4081,-2.4876,-3.8186,0.76375,2.8717,-3.0811,-0.41772,-
1.3478,-1.4777,0.80023,1.8029,1.7331,-0.46611,1.6082,3.5113,1.3597,-1.8348,-
7.3126,4.7406,2.7156,3.1275,-4.9351,1.3919,-2.1866,-1.9568,-0.53261,-1.5435,-0.070518,-
1.475,0.66923,0.84008,-1.0264,0.53304,1.1544},{-2.9068,-0.74116,3.7806,1.2499,-3.5518,-0.070548,0.061552,-0.50029,1.3452,2.0706,0.79124,1.8166,-
0.28033,-1.7516,1.6538,-0.5263,-0.71605,-0.53862,-1.1228,-3.6109,1.7922,-0.40807,-
0.041271,1.2103,0.45935,-1.9277,2.3386,0.24545,2.0686,2.1675,0.83115,-
1.6061,3.5414,1.9534,1.2078,3.0043,0.039,-0.16578,0.041599,1.5934,-1.6594,2.13,0.5517,2.8998,-3.8252,-
3.6281,-2.4141,-1.7926,-2.7526,0.90057,0.90597,1.4848,-0.6287,-1.1646,-1.0584,-0.23902,-
0.14375,2.5217,2.8621,-0.86292,7.8577,-0.4335,0.88764,3.1951,4.4169,0.77209,2.9778,-1.4412,-
1.3544,2.017,-0.33152,1.1937,-1.2668,0.22017,-0.98186,0.30214,-0.79647},{-0.8169,-1.8981,-2.3118,-0.45357,-2.9682,0.44366,0.21609,1.138,0.70137,-0.61505,1.5724,2.5131,-
1.9532,0.84553,-0.065019,0.9747,1.539,3.2345,-2.584,2.0658,-1.2888,-0.74358,-1.5797,-1.9297,1.0165,-
1.7212,1.252,-0.54291,-1.2208,1.3927,-1.232,1.4397,2.9706,-0.6089,-1.4756,2.6142,0.71523,0.10231,-
0.30192,-2.6881,-0.13379,0.063507,-0.39333,-2.3419,2.4209,0.30849,0.10324,2.6818,3.0216,-
1.8165,0.58566,-1.7363,-0.39491,1.9738,-1.2126,-1.893,0.88153,-0.39853,1.3069,-
3.7212,10.4633,3.5912,3.18,1.235,-0.79647,-2.4924,2.0697,-2.8843,-1.8135,-2.3598,-1.6075,-0.15181,-
0.68062,-0.40337,-0.80417,-0.3916,1.2913},{-3.4241,-0.73002,-2.4004,2.6878,0.098848,1.2121,0.09007,0.76374,2.0226,-1.8624,-0.19089,-1.2029,-
0.063261,-1.6855,0.15314,1.5623,-1.5197,-1.7584,1.9271,-3.4304,-
1.6311,1.9778,2.0673,0.96178,0.68634,1.313,-1.7319,2.4309,0.8525,-1.1569,-1.2283,-1.8848,2.0559,-
1.5831,-3.5354,-2.1926,0.0042971,1.5035,0.09585,1.5188,1.9544,0.46345,0.80795,1.2457,-0.65119,1.9364,-
2.8269,2.9891,0.74802,-0.59517,-0.84114,1.2962,0.029814,1.7167,-1.7275,-1.0152,-1.4882,-2.2584,-
2.8684,0.53065,3.8003,-3.7736,-1.7018,3.422,-0.52649,-2.6259,1.0961,2.2053,-0.29027,-1.5983,0.47118,-
1.4908,1.0947,-0.97726,-0.23407,-0.73411,-0.34745},{-4.3299,2.05,-2.3002,0.2549,1.7277,1.4699,-1.4644,0.84396,1.611,2.075,0.080313,-
0.73606,0.19078,1.6586,-0.25944,-0.90668,-0.19386,2.0404,0.3431,-1.4978,0.22066,-
0.18671,0.83016,1.1577,-1.5647,0.58555,1.0471,1.3981,2.4173,-1.4638,-0.24407,-0.39335,-0.93713,-
1.9941,3.2873,2.4943,0.57153,2.6262,-2.4417,-1.3501,1.8577,-
0.0044273,2.7494,2.9452,3.5929,2.1905,2.0868,-4.2643,-1.89,1.2245,1.2756,-0.20656,-1.1738,0.56158,-
0.9338,-0.95595,-0.40716,1.0742,0.61466,-4.8622,-8.9606,-0.63676,2.0707,4.2323,1.3878,-0.9108,-
4.9672,1.1275,-1.1736,-0.072651,-1.5244,-1.8476,-0.79909,0.44374,0.49249,-0.74711,-0.060356},{-3.3024,0.1171,2.2296,-1.6893,-3.2339,0.97076,-0.78964,0.2733,1.3352,0.6535,-1.7132,1.3659,0.055245,-
1.6126,-0.25079,-1.1552,-0.98387,1.5539,-2.6955,-1.1785,-1.7544,-0.92472,0.44053,1.9331,-
0.93485,0.15185,1.4352,2.0091,-0.26335,1.9646,-0.69785,1.7091,2.3157,-2.3217,-3.0068,-2.4554,-
0.7677,0.82262,2.1703,1.3983,2.2611,-1.9725,-0.39598,-2.0347,3.9714,3.8212,-0.081534,-1.6176,2.7892,-
1.4931,0.35267,-0.92249,1.4892,-1.1152,0.90897,-0.28843,-1.4924,3.9159,1.2848,-0.62846,1.8468,4.0539,-
2.4384,3.5935,2.5337,0.38101,3.2867,-2.4285,1.7165,2.4929,-0.35021,-0.92967,0.89793,0.94969,-0.87163,-
0.78113,0.4534},{-4.3613,4.9353,-0.03909,-2.5059,3.5642,-0.14805,1.58,0.46841,0.69964,0.62758,0.47049,-0.30204,-
1.4346,-1.5414,-0.44012,-0.63234,0.28943,2.9196,-0.12452,2.3644,-1.4818,1.25,0.39971,-
0.5384,1.4197,2.1691,1.1544,-1.1995,-1.5916,-0.35494,-0.95544,-0.20816,1.4063,-
2.7478,3.5852,1.2119,1.2602,2.5164,-2.1596,-2.3255,1.2496,-1.2408,2.5524,-0.22817,-0.84204,-
4.531,1.1837,-2.3955,-0.55412,0.73129,0.54447,1.9841,-0.49083,1.694,-0.26159,0.81903,-2.1953,1.0868,-
1.3349,-4.6065,-7.826,4.8276,0.83031,3.2796,5.4679,1.5275,-2.7804,-0.42178,-2.3487,-2.5261,-
1.4376,0.98936,-0.8013,1.0525,-0.19867,-0.27211,0.66734},{3.449,-3.2435,-4.567,0.40853,-0.045491,0.33056,0.96126,0.70953,-1.6278,1.68,-0.3605,-2.439,2.3159,-
0.21129,1.2378,0.85484,0.81937,-2.837,2.318,-3.6814,-1.6933,-0.75901,1.3897,-2.0118,-0.45784,-
0.87435,2.4984,-0.083975,-0.44082,-2.1979,1.1072,-0.97086,0.45316,1.4082,0.95354,1.3672,-2.0602,-
0.15647,0.081592,-1.5726,1.9122,2.2011,0.028327,-2.1208,-1.4102,0.74901,-3.7147,-1.1571,-3.1302,-
1.1981,1.5712,0.2068,-1.2037,-1.522,0.038628,-2.053,-1.7667,-2.2666,0.083708,0.61481,10.1448,-
0.37906,0.9517,0.32718,4.8318,3.2339,-0.002493,-1.9609,2.4522,-0.33671,0.90853,1.091,-
0.46466,0.83211,-0.83638,0.52343,0.2397},{-0.77766,0.58647,-2.9854,3.2814,1.4284,-0.20043,-1.1812,-0.90398,1.3068,-1.9182,-
1.1847,2.7758,0.096813,-2.1576,1.0404,-1.5672,-0.68751,2.711,-0.26143,-0.0003136,0.92381,-
1.8074,1.7472,-0.54447,0.71856,-1.4384,0.35701,-2.0218,0.87664,-1.9957,-0.27929,-2.0653,-
2.8953,1.2639,2.0146,-2.3859,0.16296,-1.2186,1.0167,-0.033544,-0.54226,-0.47581,0.28565,1.0903,-
1.4832,0.53473,-1.2192,3.8631,2.6484,0.96504,-0.55173,-0.88138,1.5722,1.8467,-0.036395,-
1.1215,2.4144,2.2969,-0.38501,-5.1675,5.1507,-1.5344,2.1765,2.5793,-5.1276,-0.051521,-4.5219,-
4.1178,2.2091,-1.6214,1.5483,-1.0831,1.5525,0.73987,0.25072,-0.20755,-0.92251},{2.9611,-0.14359,2.4848,3.6738,2.4715,1.0279,-0.081283,0.2748,1.1545,-0.94612,-1.6224,0.23413,-
0.23562,0.55119,1.5134,0.14808,0.079356,0.75889,1.9979,0.90355,-1.8086,2.1025,-0.28925,0.77708,-
1.0263,0.36095,-0.71941,1.1741,-0.064402,-2.6143,2.1827,0.86278,0.43895,-0.32871,1.0479,1.852,2.8986,-
2.5898,0.6688,2.3801,1.1444,-2.828,-0.69982,-1.1733,-1.2667,1.9229,-0.57759,2.9528,3.6307,-
1.1769,0.52805,1.555,0.65426,0.52779,-1.6621,-0.48601,0.55691,-4.6503,0.16383,1.7578,9.0739,-3.2118,-
1.4786,-2.4114,-1.446,-3.5773,1.6376,-3.5983,2.6762,1.9676,-1.1478,0.47697,1.8394,1.1723,-
0.56545,0.43163,0.061191},{3.4996,-1.2384,5.7253,2.0705,0.13686,0.12111,-0.28408,1.3198,0.48409,2.4848,2.341,-2.5534,1.7625,-
1.9361,1.3508,0.22522,-0.74548,-4.2966,-0.04361,-1.0635,0.93384,-0.16239,1.569,1.0304,2.4256,-
0.22982,-0.68164,1.9785,-0.68123,1.8018,1.7979,0.71681,1.5973,0.28495,0.75515,-0.34917,-1.1915,-
2.0697,-1.5928,0.55387,-1.2492,2.6362,2.2177,-2.9178,1.1622,2.8997,-3.801,-3.0923,1.3187,-
0.13769,0.20323,1.1058,-0.22483,0.65231,2.0493,-2.0769,1.408,3.0181,-1.2082,-1.4341,-8.9182,-2.2231,-
1.3477,-1.3949,2.0905,2.1759,-1.2007,0.60099,1.8614,0.024239,-0.74843,0.40428,1.1268,-1.1545,-
0.24298,-0.42876,-0.024111},{-1.0299,-0.069349,2.2362,-2.2535,-0.016452,0.71455,0.5206,-1.1017,1.0736,-2.0058,-1.9708,-
2.4808,1.3064,2.3863,1.2765,0.59695,-1.115,-1.7764,1.5302,-2.4084,-1.5534,0.40495,-0.50807,-
1.9241,0.36677,-0.38854,2.7474,0.1079,0.51437,2.0627,1.8211,1.2108,-0.4697,-1.47,-1.8804,-1.542,-
0.028619,-0.8837,0.60805,-0.45616,1.5602,-1.4568,0.027341,-2.0961,0.87592,3.2143,1.5214,-
0.50586,1.7324,1.6245,1.3178,1.1753,1.114,-2.1987,-0.32755,1.7627,2.5226,-2.5225,1.2279,-1.9961,-
0.58779,4.4207,-1.9517,1.6452,-5.6534,-1.0597,2.929,3.8078,-2.5237,1.6561,0.255,-0.97611,0.36864,-
1.1807,0.38022,-1.2587,-0.59421},{3.0281,4.7921,3.0882,0.0080801,1.931,0.072665,0.39304,1.2005,-1.168,0.53933,2.4492,2.2833,0.72465,-
0.90378,0.92099,0.24813,0.81681,-3.1559,2.9627,2.9149,0.42976,-0.020215,-0.37692,1.9811,2.0519,-
2.3726,1.3255,-1.8127,-0.20187,1.2288,-1.0984,1.9555,-2.5975,-0.63069,-3.2113,1.1351,1.7598,2.2958,-
1.6364,1.894,-1.3403,-1.3262,1.8064,-1.5822,1.6549,0.3269,-3.6941,-2.3073,-0.20284,1.6441,0.52197,-
0.99023,-0.65854,1.2259,-0.89413,-0.39332,-0.2571,-2.7396,2.7856,-2.6282,-3.4278,-4.362,3.1188,-
2.5881,1.2423,-1.4342,-1.318,3.232,-1.0283,-1.592,-0.75013,0.66046,-1.295,-0.77156,-0.87557,-0.55427,-
0.76043},{-1.6077,3.5324,-3.1723,-3.9046,-2.0743,1.394,-0.016585,-1.3345,-0.048079,-0.13008,0.88526,1.2995,-
2.5091,-0.21408,-0.17102,0.73961,1.0702,3.0087,-1.0234,3.8629,-
0.12235,1.9846,1.6214,0.15872,0.060472,-0.79032,-1.556,1.3854,-1.7798,-1.5596,0.093621,-0.652,1.5399,-
2.5768,1.8785,0.44995,-1.1433,-2.8936,-1.023,1.2187,-0.36234,-1.7492,-0.084984,0.98506,4.3632,-
1.5246,-1.4684,-0.83101,1.372,-0.10773,0.3865,0.1597,-0.20504,1.7467,1.7095,-0.88261,-
1.0357,4.3606,2.9177,0.12203,-4.797,-2.7226,1.6107,-
2.7916,0.28377,2.3148,4.2228,1.8199,1.2065,1.923,2.1345,1.7371,-
0.58977,0.96695,0.93126,0.81067,0.96752},{-2.7558,-3.7294,2.7297,-1.3556,3.2504,-1.3181,0.55451,1.2914,-0.64001,0.69967,1.6439,2.8286,-
2.2253,1.7436,-0.13435,0.99895,0.8023,2.3107,0.7444,3.0444,0.15339,-0.96509,-
0.50182,2.0164,1.7647,2.4361,-1.2854,-0.43659,0.52925,-1.3327,-0.71896,-1.8071,-
0.015662,1.8543,2.6657,1.8279,1.1373,2.8366,0.66395,-0.33619,0.58324,0.61092,-1.9918,-0.62119,-
1.8614,-3.9651,-3.5231,1.9871,-0.86692,-0.73004,-0.21888,-0.27769,0.65056,-2.0367,-1.023,1.3561,-
0.517,1.0503,0.18661,-0.48683,-10.1338,-4.8068,1.569,0.42973,1.3712,-2.6176,-0.91446,-2.2295,-1.9687,-
2.6831,-1.2786,1.0916,-1.1297,1.1078,1.1724,0.20156,1.3527},{0.1265,3.5511,3.8685,1.787,-3.1526,1.2888,0.24502,-0.55278,1.4551,1.631,1.183,1.8047,0.6949,-1.1709,-
0.95795,1.4342,-1.3945,2.1171,0.2016,-0.77362,-0.55642,0.74787,1.3164,-0.86897,-1.2409,0.43797,-
1.1484,-1.6187,1.1963,1.9454,0.67196,1.916,2.2857,-2.1636,2.5806,-2.2946,2.0101,-1.7881,1.782,-
0.15269,0.31847,0.48064,-1.9791,-2.4149,-2.8488,-2.2574,-1.0803,3.2836,-
0.68151,0.088034,1.6945,0.98458,0.47531,0.078765,-1.1607,0.79535,-2.3368,-3.8078,3.5197,3.5478,-
2.6958,5.1601,-2.6171,-4.2114,-4.1162,-0.82261,-1.2846,0.33801,2.2977,1.3876,-0.48072,1.0604,0.1872,-
0.89501,-0.7853,-1.1209,-0.54844},{-2.6966,2.9543,3.1497,2.1696,0.30781,0.47384,-1.3668,-1.655,1.2723,-1.3712,-
2.1989,1.5333,1.9169,1.0174,-1.6361,1.6776,0.41494,2.4166,2.1509,1.2385,-1.5356,-1.417,2.11,0.94508,-
1.1893,1.3299,-1.4523,-1.1373,-2.3674,1.284,-0.64218,-0.94229,2.1122,-0.028404,0.35634,-
0.61781,0.84393,-0.48457,-2.4596,2.2652,-1.3131,2.121,1.3768,0.84037,3.6449,4.631,-
0.95869,3.3245,0.17852,0.21105,-0.67179,1.806,-0.91696,0.49891,-0.8433,0.13587,0.13131,-
3.0717,0.67137,-0.36856,-8.3119,-4.1042,1.5917,-2.9549,-0.53583,0.95722,-4.1814,2.7028,-
0.23732,2.679,-0.88096,-0.31194,0.62894,-0.52704,-0.8636,-0.54912,1.0083 },{0.80583,-1.6998,2.8024,-0.79943,3.2345,0.44365,-1.2831,0.90619,-1.5143,-0.36966,-1.049,1.6863,-
0.45119,-2.4559,-0.42408,1.6223,-0.48135,1.4784,-0.12879,0.28232,-0.92161,-0.28949,1.3393,-
0.50915,1.8995,0.7158,-0.84267,1.1116,2.0418,-1.6679,-1.9784,0.46424,3.4011,-1.5485,-1.1872,-
1.6268,2.2086,-0.44072,-0.67995,0.94624,0.78301,-1.6076,-1.3343,2.167,-2.2418,-1.1876,-1.456,-1.0469,-
3.2609,2.0976,-1.285,0.61691,-0.70706,-1.0057,0.73947,-1.4128,3.1537,-0.84211,-3.8179,0.22378,-
8.5859,4.5804,-3.4081,0.3253,-1.0914,-3.2858,5.279,1.8546,2.6519,-1.0808,-0.571,-1.7372,-
1.1426,0.63809,-0.39593,-0.57981,-0.045071},{4.6882,2.5445,4.3201,-0.77221,2.8447,-0.1674,0.48989,-
0.59514,0.65965,1.8269,0.22926,2.5206,1.1769,1.4225,1.2135,-1.1805,0.27774,0.95214,1.5923,-
2.2624,0.099791,-1.5088,1.4759,1.8686,0.9924,1.1311,-0.4319,-2.0935,0.85499,0.031035,-
0.1723,1.4384,1.8054,-2.5657,0.027364,0.84803,2.3927,1.6779,1.6111,-2.1795,-1.8797,-1.2303,0.34365,-
2.3468,-1.1317,2.8043,3.2807,1.6217,3.609,-1.0506,-1.4527,0.72991,0.40188,-0.44311,0.38579,1.8069,-
1.117,2.5008,-2.4874,-3.4932,-2.777,-3.9144,-3.517,-0.65562,4.808,-1.2412,4.5142,-4.5367,-0.46194,-
1.0633,-1.1171,-0.2769,0.59493,-1.7202,0.12873,-0.89576,0.65043},{-0.32819,-4.6118,-0.84097,-1.8857,1.0193,-0.96469,1.4203,0.59154,-1.2757,-2.1126,-0.83596,-2.3944,-
2.3737,-0.16756,-0.73166,1.7244,1.3309,-0.99955,1.4494,-1.471,-1.4108,-0.63715,0.67442,-
1.9769,2.2154,-1.6579,0.65179,-1.7868,-2.2014,-2.1868,0.28391,-2.1297,-3.0601,3.332,-1.376,-
2.1248,2.4141,0.030206,-1.7907,-1.7322,0.062931,0.48855,-1.9974,-0.64407,1.2772,3.5337,-2.1464, 
-3.6234,-1.3558,-0.93606,0.595,1.4703,-0.52933,2.0278,-0.42545,1.3681,-0.99877,-2.9697, -0.23977,0.92104,3.1373,-3.0812,0.16164,-0.83465,-1.1373,3.1338,-0.38118,-1.8916,1.6172,0.35742,0.7094,-0.59443,-1.3623,0.20708,0.86543,0.59981,-0.10405}};            
      
     l2_w= new double[]{-0.13608,0.08763,-0.041954,0.1343,-0.034788,-0.11264,-0.099953,0.020241,0.014266,0.0017591,0.044096,-0.014614,0.0287,-0.011795,-0.014425,-0.060921,0.040048,-0.018934,-0.075787,-0.071162,-0.14577,-0.18264,0.015509,0.010965};
             l1_bias= new double[]{0.44197,
 3.8454,
 -1.1981,
 -2.3778,
 0.76741,
 0.2107,
 1.0882,
 1.4453,
 -0.59527,
 -0.48552,
 -0.9974,
 0.51513,
 1.322,
 -2.2223,
 -1.7621,
 -0.59484,
 -0.23084,
 -3.2013,
 -1.6594,
 0.81403,
 -1.7464,
 2.6465,
 0.0063856,
 1.1701};
                l2_bias=0.37335;
    }
    static void condition(float[] vector )
    {
        vector = new float[100];
    for(int i=0;i< size;i++)
    {
    if(vector[i]!=0)
    {vector[i]=100-Math.abs(vector[i]);
    vector[i]=vector[i]/100;
    }
    }
   //  System.out.println("vector:"+vector);
    simulate(vector);
    }
 static void simulate(float[] vector)//pass input to this
    {
     double [] sum1 =new double[l2_size];
      double sum2 =0; 
     // vector = new float[100];
     
    for(int i=0;i<l2_size;i++)
    {
        for(int j=0;j<l1_size;j++)
        {
        sum1[i]=sum1[i] + l1_w[i][j]*vector[j];
         }
        sum1[i]=sum1[i]+l1_bias[i];//add tansig func here
        
        sum1[i]=Math.exp(sum1[i]*(-1))+1;
        sum1[i]=Math.pow(sum1[i], -1);
        
    }
    for(int i=0;i<l2_size;i++)
    {
       
    sum2=sum2 + sum1[i]*l2_w[i];
           
    }
    sum2=sum2+l2_bias;//add tansig fnc its outtpput
    sum2=Math.exp(sum2*(-1))+1;
        sum2=Math.pow(sum2, -1);
       
    out=(int) (sum2*100);//loc_tag output
    if (loc_tag_revese.containsKey(out)) {
              outputstring = loc_tag_revese.get(out);
System.out.println("Location :"+ out+outputstring);
    } 
    } 
    
     public static void get_vectors(WifiScanResult results ) throws IOException {
       float[] vector = new float[100];
               List<AccessPoint> accsPts = results.getResultList();
               //this s only for testing
               System.out.println();
            String location = results.getLocationTag();
      System.out.println("Actual Location :"+ location);
            if (loc_tag.containsKey(location)) {
               System.out.println("tag"+ loc_tag.get(location));
            }
               
               //till here
            for (AccessPoint pt : accsPts) {
                            
                if (bssids.containsKey(pt.getBssid())) {
                    vector[bssids.get(pt.getBssid())] = (pt.getLevel());
                }
            }
            condition(vector);
     }

     static void test_prg() throws IOException
    {
        float[] vector = new float[100];
  
  File readings_folder = new File( WifiReadingsFolder);
        File[] files = readings_folder.listFiles();
     for (File f_name : files) {
            WifiScanResult res = null;
            WifiRecordReader reader = new WifiRecordReader(WifiReadingsFolder + f_name.getName());
            while ((res = reader.nextResult()) != null) {
                            
get_vectors(res);
   System.out.println(res);
            }
    }
    }
       
   public static void main(String args[]) throws FileNotFoundException, ClassNotFoundException, IOException
   {
       neural();
         WifiScanResult input =null;
        try {
            java.io.ObjectInputStream objos=new ObjectInputStream(new FileInputStream("C:/bssidsNlocids.hashtable"));
            bssids=(Hashtable<String, Integer>) objos.readObject();
          //  System.out.println("bssids:"+bssids);
            loc_tag=(Hashtable<String, Integer>) objos.readObject();
            for(Entry<String,Integer> entry : loc_tag.entrySet()) {
                loc_tag_revese.put(entry.getValue(), entry.getKey());
            }
        //    System.out.println("loc:"+loc_tag);
        } catch (IOException ex) {
            //Logger.getLogger(neural.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error in opening file");
        }
        
        test_prg();
        
              
         }
   
    
} 
    


